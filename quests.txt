Изучи эту ссылку: https://stackoverflow.com/questions/1519006/how-do-you-create-a-remote-git-branch
Ветка гитхаба dev моя. Заливай свои решения в наношеловую ветку
или создай себе еще одну. Или даже не одну.

********************************************************

В файле parser.h есть дефайны ключевых элементов терминала.
Измени этот файл так, чтобы он содержал все необходимые дефайны согласно сабджекту.

В задании есть такая строка: "Not interpret unclosed quotes or unspecified special characters like \ or ;".
Добавь в хидер дейфайны запрещнных элементов терминала. Думаю, это нам поможет.

И да, если разрешенный элемент состоит всего из одного символа,
то это не дефайн чара. Это дефайн строки, состоящей из одного символа!

********************************************************

Сделай ка функцию parser_get_operators из файла parser.h.
Она простенькая.

И помни: никаких ликов и ошибок по норме.

********************************************************

Пока мы не перешли к реализации двусвязного списка.
Давай начнем с того, что ты сделаешь функцию с таким прототипом:
    char **parser_split(char *command, char **operators);
И, разумеется, по норме. Куда уж без нее?

Она на вход будет принимать команду терминала 
и список операторов из функции parser_get_operators.
Пример команды: < input_file cat | grep SUBSTRING > output_file

Пусть функция разобьет эту строку на массив строк по дефайнам из хидера.

Подкючи parser.h. Начнем линковать файлы уже на этом этапе.

Не используй ft_split. Он здесь не поможет. 
Строка может содержать лишние пробелы. Научись их откидывать.
А может и не содержать пробелов там, где ты к ним привыкла.

Та же команда может быть записана в таком формате:
<input_file cat|grep      SUBSTRING >output_file.

По итогу работы твоей функции на примере команды выше должен возвращаться массив строк:
    char **array = parser_split(
                        "<input_file cat|grep      SUBSTRING >output_file",
                        parser_get_operators());

    array[0] => "<"
    array[1] => "input_file"
    array[2] => "cat"
    array[3] => "|"
    array[4] => "grep"
    array[5] => "SUBSTRING"
    array[6] => ">"
    array[7] => "output_file"
    array[8] => NULL (нулевой указатель, как маркер конца массива)
    
Ну и, конечно, ликов не должно быть.
А вот проверки на NULL'и быть обязаны.
